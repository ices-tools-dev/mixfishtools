% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_landByStock.R
\name{plot_landByStock}
\alias{plot_landByStock}
\title{Pie chart of landings by stock}
\usage{
plot_landByStock(
  data,
  refTable,
  ylab = "Landings [t]",
  fillLegendTitle = "Stock"
)
}
\arguments{
\item{data}{data.frame Contains information on the stocks to include and
their landings (or catch) to plot. Stock variable names (`stock`) should
match those of \code{\link[mixfishtools]{refTable}}.
Other required variables include: `value` the value of landings (or catch)
for each stock; and `col` which defines the fill colour as a hex colour code,
by stock, to be used.}

\item{refTable}{data.frame A look-up reference table for stocks and associated attributes.
The \code{refTable} data.frame lists stock names and
corresponding colours for consistency across plots. To be used as a look-up
table in converting between variable stock names and printed ones.

\itemize{
  \item 1) stock - ICES stock codes used in advice
  \item 2) order - stock order to be used in plots
  \item 3) col - stock colors for plots (e.g. pals::brewer.paired())
  \item 4) stock_short - short stock name used in mixed fishery model
}}

\item{ylab}{character Y-axis label (Default: `ylab = "Landings [t]"`)}

\item{fillLegendTitle}{character Fill legend title}
}
\value{
plot output of class ggplot
}
\description{
Pie chart of landings by stock. Used in WGMIXFISH-ADVICE
}
\details{
Users will need to provide the data object to produce the plot.
}
\examples{

# make example data
data(stfFltStkSum)
head(stfFltStkSum)

data(refTable)
head(refTable)

# select final data year and a single scenario, and aggregated total landings
datYr <- 2020
dat <- subset(stfFltStkSum, year == datYr & scenario == "min")
agg <- aggregate(landings ~ stock, dat, sum, na.rm = TRUE)

# In the North Sea model, all Nephrops FUs area aggregated together
agg$isNEP <- seq(nrow(agg)) \%in\% grep("NEP", agg$stock)

agg <- rbind(subset(agg, !isNEP)[,c(1:2)],
  data.frame(stock = "Nephrops", landings = sum(subset(agg, isNEP)$landings)))

# replace stock with ICES stock code
agg$stock <- refTable$stock[match(agg$stock, refTable$stock_short)]

names(agg) <- c("stock", "value")
agg

plot_landByStock(data = agg, refTable)

}
